{"version":3,"sources":["components/MovieCard.js","components/MovieList.js","components/Loading.js","components/SearchInput.js","App.js","index.js"],"names":["MovieCard","movie","className","src","poster","alt","title","vote","MovieList","movies","map","id","Loading","SearchInput","handleSearch","handleReset","useState","query","setQuery","type","value","onChange","e","target","onKeyDown","key","placeholder","onClick","API_KEY","App","movieList","setMovieList","loading","setLoading","page","setPage","searchMode","setSearchMode","loadMovies","fetch","then","res","json","response","results","overview","vote_average","poster_path","prevMovies","useEffect","document","addEventListener","el","documentElement","scrollTop","clientHeight","scrollHeight","prevVal","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.3747bfde.chunk.js","sourcesContent":["import \"./MovieCard.css\";\n\nfunction MovieCard({ movie }) {\n  return (\n    <div className=\"movie-card\">\n      <img src={`https://image.tmdb.org/t/p/w500${movie.poster}`} alt={movie.title} />\n      <h2>{movie.title}</h2>\n      <h3>Vote: {movie.vote}</h3>\n    </div>\n  )\n}\n\nexport default MovieCard;","import MovieCard from \"./MovieCard\";\nimport \"./MovieList.css\";\n\nfunction MovieList({ movies }) {\n  return (\n    <div className=\"movie-list\">\n      { movies.map(movie => (\n        <MovieCard \n          key={movie.id}\n          movie={movie}\n        />\n      )) }\n    </div>\n  )\n}\n\nexport default MovieList;","import './Loading.css';\n\nfunction Loading() {\n  return <div className=\"loading\">Loading...</div>\n}\n\nexport default Loading","import { useState } from \"react\";\nimport \"./SearchInput.css\"\n\nfunction SearchInput({ handleSearch, handleReset }) {\n  const [query, setQuery] = useState('')\n\n  function handleInputChange(e) {\n    setQuery(e.target.value)\n  }\n\n  function handleKeyDown(e) {\n    if (!query) return\n\n    e.key === 'Enter' && handleSearch(query);\n  }\n\n  function handleInputReset() {\n    setQuery('');\n    handleReset();\n  }\n\n  return (\n    <span>\n      <input \n        className=\"search-input\"\n        type=\"text\" \n        value={query}\n        onChange={handleInputChange}\n        onKeyDown={handleKeyDown}\n        placeholder=\"Type a movie name...\"\n      />\n      <span \n        className=\"reset-btn\"\n        onClick={handleInputReset}\n      >RESET</span>\n    </span>\n  )\n}\n\nexport default SearchInput;","import \"./App.css\";\nimport { useEffect, useState } from \"react\";\nimport MovieList from \"./components/MovieList\";\nimport Loading from \"./components/Loading\";\nimport SearchInput from \"./components/SearchInput\";\n\nconst API_KEY = '90db55b9dcc02761d6a6051a96002649'\n\nfunction App() {\n  const [movieList, setMovieList] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [page, setPage] = useState(1);\n  const [searchMode, setSearchMode] = useState(false);\n\n  useEffect(() => {\n    if (loading || searchMode) return \n    loadMovies();\n  }, [page])\n\n  useEffect(() => {\n    if (page === 1) {\n      document.addEventListener('scroll', (e) => {\n        const el = e.target.documentElement\n        // scroll is at the bottom of the page\n        if (el.scrollTop + el.clientHeight === el.scrollHeight) {\n          setPage(prevVal => prevVal + 1)\n        }\n      })\n    }\n  }, [page])\n\n  function loadMovies() {\n    setLoading(true);\n    const apiUrl = 'https://api.themoviedb.org/3/movie/587807/recommendations'\n\n    fetch(`${apiUrl}?page=${page}&api_key=${API_KEY}`)\n      .then(res => res.json())\n      .then(response => {\n        const movies = response.results.map(movie => ({\n          id: movie.id,\n          title: movie.title,\n          overview: movie.overview,\n          vote: movie.vote_average,\n          poster: movie.poster_path,\n        }))\n\n        setLoading(false)\n        setMovieList(prevMovies => [...prevMovies, ...movies])\n      })\n  }\n\n  function searchMovies(query) {\n    setMovieList([])\n    setSearchMode(true);\n\n    setLoading(true);\n    const apiUrl = 'https://api.themoviedb.org/3/search/movie'\n    \n    fetch(`${apiUrl}?query=${query}&api_key=${API_KEY}`)\n      .then(res => res.json())\n      .then(response => {\n        const movies = response.results.map(movie => ({\n          id: movie.id,\n          title: movie.title,\n          overview: movie.overview,\n          vote: movie.vote_average,\n          poster: movie.poster_path,\n        }))\n\n        setLoading(false)\n        setMovieList(movies)\n      })\n  }\n\n  function handleReset() {\n    setMovieList([])\n    setSearchMode(false)\n\n    if (page === 1) {\n      loadMovies();\n    } else {\n      setPage(1);\n    }\n  }\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <SearchInput \n          handleSearch={searchMovies} \n          handleReset={handleReset}\n        />\n      </header>\n      <main>\n        <MovieList movies={movieList} />\n        { loading && <Loading /> }\n      </main>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}